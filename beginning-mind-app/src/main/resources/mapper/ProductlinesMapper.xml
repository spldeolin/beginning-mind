<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spldeolin.beginningmind.app.mapper.ProductlinesMapper">
    <!-- [START] Any modifications may be overwritten by future code generations. -->

    <resultMap id="all" type="com.spldeolin.beginningmind.app.entity.ProductlinesEntity">
        <id column="productLine" property="productLine"/>
        <result column="textDescription" property="textDescription"/>
    </resultMap>

    <sql id="all">
        `productLine`, `textDescription`
    </sql>

    <insert id="insert" parameterType="com.spldeolin.beginningmind.app.entity.ProductlinesEntity">
        <!-- @formatter:off -->
        INSERT INTO `productlines`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productLine!=null"> `productLine`, </if>
            <if test="textDescription!=null"> `textDescription`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="productLine!=null"> #{productLine}, </if>
            <if test="textDescription!=null"> #{textDescription}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsert">
        <!-- @formatter:off -->
        <foreach collection="entities" item="one" separator=";">
            INSERT INTO `productlines`
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="one.productLine!=null"> `productLine`, </if>
                <if test="one.textDescription!=null"> `textDescription`, </if>
            </trim>
            <trim prefix="VALUE (" suffix=")" suffixOverrides=",">
                <if test="one.productLine!=null"> #{one.productLine}, </if>
                <if test="one.textDescription!=null"> #{one.textDescription}, </if>
            </trim>
        </foreach>;
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsertEvenNull">
        <!-- @formatter:off -->
        INSERT INTO `productlines`
            ( <include refid="all"/> )
        VALUES
            <foreach collection="entities" item="one" separator=",">(
                #{one.productLine}, #{one.textDescription}
            )</foreach>
        <!-- @formatter:on -->
    </insert>

    <update id="batchUpdate">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `productlines`
            <set>
                <if test="one.textDescription!=null"> `textDescription` = #{one.textDescription}, </if>
            </set>
            WHERE TRUE
              AND `productLine` = #{one.productLine}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <update id="batchUpdateEvenNull">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `productlines`
            SET
                `textDescription` = #{one.textDescription}
            WHERE TRUE
              AND `productLine` = #{one.productLine}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <select id="queryById" parameterType="String" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `productlines`
        WHERE TRUE
          AND `productLine` = #{productLine}
        <!-- @formatter:on -->
    </select>

    <update id="updateById" parameterType="com.spldeolin.beginningmind.app.entity.ProductlinesEntity">
        <!-- @formatter:off -->
        UPDATE `productlines`
        <set>
            <if test="textDescription!=null"> `textDescription` = #{textDescription}, </if>
        </set>
        WHERE TRUE
          AND `productLine` = #{productLine}
        <!-- @formatter:on -->
    </update>

    <update id="updateByIdEvenNull" parameterType="com.spldeolin.beginningmind.app.entity.ProductlinesEntity">
        <!-- @formatter:off -->
        UPDATE `productlines`
        SET
            `textDescription` = #{textDescription}
        WHERE TRUE
          AND `productLine` = #{productLine}
        <!-- @formatter:on -->
    </update>

    <select id="queryByIds" parameterType="String" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `productlines`
        WHERE TRUE
          AND `productLine` IN (<foreach collection="productLines" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByIdsEachId" parameterType="String" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `productlines`
        WHERE TRUE
          AND `productLine` IN (<foreach collection="productLines" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByEntity" parameterType="com.spldeolin.beginningmind.app.entity.ProductlinesEntity"
        resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `productlines`
        WHERE TRUE
          <if test="productLine!=null"> AND `productLine` = #{productLine} </if>
          <if test="textDescription!=null"> AND `textDescription` = #{textDescription} </if>
        <!-- @formatter:on -->
    </select>

    <select id="listAll" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `productlines`
        WHERE TRUE
        <!-- @formatter:on -->
    </select>

    <insert id="insertOrUpdate" parameterType="com.spldeolin.beginningmind.app.entity.ProductlinesEntity">
        <!-- @formatter:off -->
        INSERT INTO `productlines`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productLine!=null"> `productLine`, </if>
            <if test="textDescription!=null"> `textDescription`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="productLine!=null"> #{productLine}, </if>
            <if test="textDescription!=null"> #{textDescription}, </if>
        </trim>
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
            <if test="textDescription!=null"> `textDescription` = #{textDescription}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <!-- [END] Any modifications may be overwritten by future code generations. -->
</mapper>