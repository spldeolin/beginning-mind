/*
 * Generated by Cadeau Support.
 *
 * https://github.com/spldeolin/cadeau-support
 */

package com.spldeolin.beginningmind.core.controller;

import java.util.List;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.spldeolin.beginningmind.core.api.dto.Page;
import com.spldeolin.beginningmind.core.api.dto.PageParam;
import com.spldeolin.beginningmind.core.controller.annotation.Permission;
import com.spldeolin.beginningmind.core.input.SecurityRoleInput;
import com.spldeolin.beginningmind.core.model.SecurityRole;
import com.spldeolin.beginningmind.core.service.SecurityRoleService;

/**
 * “角色”管理
 *
 * @author Deolin 2018/7/3
 */
@RestController
@RequestMapping("/securityRole")
@Validated
public class SecurityRoleController {

    @Autowired
    private SecurityRoleService securityRoleService;

    /**
     * 创建一个“角色”
     *
     * @param securityRoleInput 待创建的“角色”
     * @return 创建成功后生成的ID
     */
    @PostMapping("/create")
    @Permission(display = "创建一个“角色”")
    Long create(@RequestBody @Valid SecurityRoleInput securityRoleInput) {
        return securityRoleService.createEX(securityRoleInput.toModel());
    }

    /**
     * 获取一个“角色”
     *
     * @param id 待获取“角色”的ID
     * @return 角色
     */
    @GetMapping("/get")
    @Permission(display = "获取一个“角色”")
    SecurityRole get(@RequestParam Long id) {
        return securityRoleService.getEX(id);
    }

    /**
     * 更新一个“角色”
     *
     * @param id 待更新“角色”的ID
     * @param securityRoleInput 待更新的“角色”
     */
    @PostMapping("/update")
    @Permission(display = "更新一个“角色”")
    void update(@RequestParam Long id, @RequestBody @Valid SecurityRoleInput securityRoleInput) {
        securityRoleService.updateEX(securityRoleInput.toModel().setId(id));
    }

    /**
     * 删除一个“角色”
     *
     * @param id 待删除“角色”的ID
     */
    @PostMapping("/delete")
    @Permission(display = "删除一个“角色”")
    void delete(@RequestParam Long id) {
        securityRoleService.deleteEX(id);
    }

    /**
     * 获取一批“角色”
     *
     * @param pageParam 页码和每页条目数
     * @return “角色”分页
     */
    @GetMapping("/search")
    @Permission(display = "获取一批“角色”")
    Page<SecurityRole> search(PageParam pageParam) {
        return securityRoleService.page(pageParam);
    }

    /**
     * 删除一批“角色”
     *
     * @param ids 待删除“角色”的ID列表
     * @return 删除情况
     */
    @PostMapping("/batchDelete")
    @Permission(display = "删除一批“角色”")
    String delete(@RequestParam List<Long> ids) {
        return securityRoleService.deleteEX(ids);
    }

}